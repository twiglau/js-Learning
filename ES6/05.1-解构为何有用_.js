/**
 * 在ES5及更早版本中,从对象或数组中获取信息,并将特定数据存入本地变量,需要书写许多并且相似
 * 的代码.
 */
let options = {
    repeat:true,
    save:false
};
//从对象中提取数据
let repeat = options.repeat,save = options.save;
/**
 * 此代码提取了 options 对象的 repeat 与 save 值,并将其存在同名的本地变量上. 虽然这段代码
 * 看起来简单,但想象一下若有大量变量需要处理,你就必须逐个为其赋值;并且若有一个嵌套的数据结构需要
 * 遍历以寻找信息,你可能会为一点数据而挖掘整个结构.
 * 
 * 这就是 ES6 为何要给对象与数组添加解构. 当把数据结构分解为更小的部分时,从中提取你要的数据会变
 * 得容易许多. 很多语言都能用精简的语法来实现解构,让它更容易使用.
 */