//西面表达式的值是?
console.log("1.0e0" == {valueOf:function(){return true;}});
//以上这连个看似无关的值使用 == 运算符实际上是相等的. 就像第3条描述的隐式强制转换一样,
//在比较之前,它们都被转换为数字. 字符串 "1.0e0"被解析为数字1,而匿名对象也通过调用
//其自身的valueOf()方法得到结果true,然后再转换为数字,得到1.

/**
 * 1.当参数类型不同时, == 运算符应用了一套难以理解的隐式强制转换规则.
 * 2.使用 === 运算符,使读者不需要涉及任何的隐式强制转换就能明白你的比较运算.
 * 3.当比较不同类型的值时, 使用你自己的显式强制转换使程序的行为更清晰.
 */